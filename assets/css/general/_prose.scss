@use "./sass-vars" as *;
a {
  color: var(--base0d);
  text-decoration: underline wavy;
  text-decoration-thickness: 0.5px; // wavy hairlines on retina
  text-underline-offset: 2px;

  &:hover,
  &:focus-visible {
    color: var(--base0c);
  }

  &:where(:visited) {
    color: var(--base0e);
  }

  &[href*="amzn.to"]:after,
  &[href*="amazon.com"]:after {
    content: "";
    background: currentColor;
    width: 1em;
    height: 1em;
    display: inline-block;
    mask: url("/extra/amazon.svg");
    vertical-align: middle;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-header);
  position: relative;

  a,
  a:hover,
  a:visited {
    all: unset;
  }

  a:hover::before {
    content: "ยง";
    position: absolute;
    left: -1em;
    width: 2em;
    cursor: pointer;
  }

  &:has(a:target) {
    animation: flash 0.75s 3 ease-in-out both;
  }
}

h1 {
  font-size: 1.75em;
}

blockquote {
  all: unset;
  display: block;
  border-left: 3px solid var(--base02);
  color: var(--base);
  margin-left: 0.5em;
  padding-left: 1em;
}
pre {
  font-family: var(--font-mono);
  font-size: 0.9rem;
  line-height: 1.2;
  margin: 0;
  font-feature-settings: "calt";
  white-space: pre-wrap;
  word-wrap: break-word;
}
code {
  font-family: var(--font-mono);
  font-feature-settings: "calt";
  color: var(--base0d);
}
.codeblock code {
  &::before,
  &::after {
    content: "";
  }
}
hr {
  all: unset;
  display: block;
  border-top: 1px solid var(--base02);
  margin-block: 1em 0;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
thead :is(th, td) {
  border-bottom: 2px solid var(--foreground);
}
th,
td {
  padding: 5px 30px 5px 0;

  &[align="right"] {
    padding-right: 0;
  }
}
tr:hover :is(th, td) {
  background-color: var(--base01);
}
ul {
  overflow-wrap: break-word;
}
img {
  max-width: 100%;
}
p:has(img) {
  text-align: center;
}

p:has(.footnote-ref a:target) {
  animation: highlight 1.5s;
  @media (prefers-reduced-motion) {
    animation-timing-function: steps(1, end);
  }
}
abbr {
  cursor: help;
}

.footnotes {
  li:target {
    animation: highlight 5s;
    @media (prefers-reduced-motion) {
      animation-timing-function: steps(1, end);
      animation-duration: 2s;
    }
  }
}

// Have to do this because you can't extend across media queries
@mixin bottom-footnotes() {
  margin-top: 3rem;
  padding-top: 1rem;
  border-top: 1px solid var(--base02);
}

.footnotes:not([data-sidebar]) {
  @include bottom-footnotes();
}

.footnotes[data-sidebar] {
  @media screen and (max-width: calc($toc-hide - 1px)) {
    @include bottom-footnotes();
  }
  @media screen and (min-width: $toc-hide) {
    li {
      position: absolute;
      right: calc(-1 * (var(--sidebar-width) + var(--grid-gap)));
      top: calc(var(--top) - 1lh);
      color: var(--base05);

      display: flex;

      border-radius: var(--radius);

      // Have to manually redo list-items, because they're broken with flexbox
      &::before {
        counter-increment: list-item;
        content: counter(list-item);
        padding-top: 1ch;
        padding-left: 1ch;
        color: var(--base03);
      }

      p {
        padding: 1ch;
        width: calc(var(--sidebar-width) - 2ch);
        box-sizing: border-box;
      }

      p:first-of-type {
        margin-top: 0;
      }

      p:last-of-type {
        margin-bottom: 0;
      }
    }
  }

  li {
    transition: linear 2000ms;
  }
  li[data-hover] {
    background-color: var(--base02);
    transition: linear 250ms;
  }
}
