# Do not modify!
# This file was generated from a template using https://github.com/StefMa/pkl-gha

name: Deploy Site
'on':
  push:
    branches:
    - main
  workflow_dispatch: {}
concurrency:
  group: pages
  cancel-in-progress: true
jobs:
  build-elixir:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: jdx/mise-action@v2
      with:
        mise_toml: |-
          [settings]
          enable_tools = ["elixir", "erlang"]
    - name: Elixir Deps cache
      id: elixir-deps-cache
      uses: actions/cache@v4
      with:
        path: |-
          deps
          _build
          .mix/archives/
        key: elixir-build-${{hashFiles('.tool-versions')}}-${{hashFiles('mix.lock')}}
        restore-keys: elixir-build-${{hashFiles('.tool-versions')}}-
    - name: Install Elixir Dependencies
      run: |-
        mix local.hex --force --if-missing
        mix deps.get
    - name: Build Tableau
      env:
        MIX_ENV: prod
      run: mix tableau.build
    - name: site-elixir
      uses: actions/upload-artifact@v4
      with:
        name: site-elixir
        path: ./_site
        if-no-files-found: error
  build-assets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: jdx/mise-action@v2
      with:
        mise_toml: |-
          [settings]
          enable_tools = ["bun"]
    - name: Bun Deps Cache
      id: bun-deps-cache
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: bun-cache-${{hashFiles('.tool-versions')}}-${{hashFiles('assets/bun.lock')}}
        restore-keys: bun-cache-${{hashFiles('.tool-versions')}}-
    - name: Install JS dependencies
      working-directory: assets/
      run: bun install --frozen-lockfile
    - name: Build Static Assets
      env:
        NODE_ENV: production
      working-directory: assets/
      run: bun run build
    - name: site-static
      uses: actions/upload-artifact@v4
      with:
        name: site-static
        path: ./_site
        if-no-files-found: error
  deploy-netlify:
    needs:
    - build-elixir
    - build-assets
    runs-on: ubuntu-latest
    environment:
      name: netlfiy-prod
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |-
          .mise.toml
          .mise.lock
        sparse-checkout-cone-mode: false
    - uses: actions/download-artifact@v4
      with:
        path: _site/
        pattern: site-*
        merge-multiple: true
    - uses: jdx/mise-action@v2
      with:
        mise_toml: |-
          [settings]
          enable_tools = ["ubi:wilsonzlin/minify-html"]
    - name: Minify HTML
      run: |-
        shopt -s globstar
        minify-html --minify-css --minify-js _site/**/*.html
    - name: Deploy to Netlify
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=_site --prod -m "https://github.com/paradox460/pdx.su/commit/${{ github.sha }}"
